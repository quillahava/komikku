#!@PYTHON@

# @prettyname@
#
# Copyright (C) 2019-2022 @authorfullname@ <@authoremail@>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import gettext
import locale
import os
import sys

sys.path.insert(1, '@pythondir@')

builddir = os.environ.get('MESON_BUILD_ROOT')
if builddir:
    sys.dont_write_bytecode = True
    sys.path.insert(1, os.environ['MESON_SOURCE_ROOT'])
    xdg_data_dir = os.path.join(builddir, '@prefix@', '@datadir@')
    os.putenv('XDG_DATA_DIRS', '%s:%s' % (xdg_data_dir, os.getenv('XDG_DATA_DIRS', '/usr/local/share/:/usr/share/')))


def install_excepthook():
    """ Make sure we exit when an unhandled exception occurs. """
    old_hook = sys.excepthook

    def new_hook(etype, evalue, etb):
        print('Error: An unhandled exception occurs')

        old_hook(etype, evalue, etb)

        context = GLib.main_context_default()
        while context.iteration():
            app = Gio.Application.get_default()
            if app is not None:
               app.window.quit()
               break

        sys.exit()

    sys.excepthook = new_hook


if __name__ == '__main__':
    import gi

    gi.require_version('Gtk', '4.0')
    gi.require_version('Adw', '1')

    from gi.repository import Gio
    from gi.repository import GLib
    from gi.repository import Gtk

    install_excepthook()

    # Why both locale and gettext are needed?
    # gettext works for the python part but not for XML UI files!
    try:
        locale.textdomain('@projectname@')
        locale.bindtextdomain('@projectname@', '@localedir@')
    except AttributeError as e:
        # Python built without gettext support doesn't have bindtextdomain() and textdomain()
        print('Could not bind the gettext translation domain. Some translations will not work.')
        print('Error: {}'.format(e))
    gettext.textdomain('@projectname@')
    gettext.bindtextdomain('@projectname@', '@localedir@')

    resource = Gio.Resource.load(os.path.join('@pkgdatadir@', '@appid@.gresource'))
    resource._register()

    from @projectname@.application import Application

    Application.application_id = '@appid@'
    Application.profile = @PROFILE@
    Application.version = '@VERSION@'
    app = Application()

    try:
        status = app.run(sys.argv)
    except SystemExit as e:
        status = e.code

    sys.exit(status)
